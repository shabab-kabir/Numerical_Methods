function [nodes, weights] = getGaussianQuadratureData(n)
    % Precomputed nodes and weights for Gaussian Quadrature
    switch n
        case 2
            C_Case_2 = [-0.577350269189626, 0.577350269189626, 0.999999999999886, 0.999999999999886];
            nodes = C_Case_2(1:2);
            weights = C_Case_2(3:4);
        case 3
            C_Case_3 = [-0.774596669241483, 0.000000000000000, 0.774596669241483, 0.555555555555447, 0.888888888888861, 0.555555555555447];
            nodes = C_Case_3(1:3);
            weights = C_Case_3(4:6);
        case 4
            C_Case_4 = [-0.861136311594052, -0.339981043584856, 0.339981043584856, 0.861136311594052, 0.347854845137384, 0.652145154862547, 0.652145154862548, 0.347854845137384];
            nodes = C_Case_4(1:4);
            weights = C_Case_4(5:8);
        case 5
            C_Case_5 = [-0.906179845938664, -0.538469310105683, 0.000000000000000, 0.538469310105683, 0.906179845938664, 0.236926885056137, 0.478628670499342, 0.568888888888867, 0.478628670499342, 0.236926885056137];
            nodes = C_Case_5(1:5);
            weights = C_Case_5(6:10);
        case 6
            C_Case_6 = [-0.932469514203152, -0.661209386466264, -0.238619186083197, 0.238619186083197, 0.661209386466264, 0.932469514203152, 0.171324492379139, 0.360761573048121, 0.467913934572666, 0.467913934572666, 0.360761573048121, 0.171324492379139];
            nodes = C_Case_6(1:6);
            weights = C_Case_6(7:12);
        case 7
            C_Case_7 = [-0.949107912342759, -0.741531185599394, -0.405845151377397, 0.000000000000000, 0.405845151377397, 0.741531185599394, 0.949107912342759, 0.129484966168841, 0.279705391489259, 0.381830050505106, 0.417959183673456, 0.381830050505106, 0.279705391489259, 0.129484966168841];
            nodes = C_Case_7(1:7);
            weights = C_Case_7(8:14);
        otherwise
            error('Precomputed nodes and weights not available for n=%d', n);
    end
end